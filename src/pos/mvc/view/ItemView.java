/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pos.mvc.view;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import pos.mvc.controller.ItemController;
import pos.mvc.model.ItemModel;

/**
 *
 * @author Thisura
 */
public class ItemView extends javax.swing.JFrame {

    /**
     * Creates new form ItemView
     */
    ItemController itemController;

    public ItemView() {
        itemController = new ItemController();
        initComponents();
        loadAllItems();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BasePanel = new javax.swing.JPanel();
        ManageCustomerPanel = new javax.swing.JPanel();
        HeaderLabel = new javax.swing.JLabel();
        CustDetailsPanel = new javax.swing.JPanel();
        ItemCodeLabel = new javax.swing.JLabel();
        PackSizeLabel = new javax.swing.JLabel();
        ItemDescLabel = new javax.swing.JLabel();
        UnitPriceLabel = new javax.swing.JLabel();
        SaveItemButton = new javax.swing.JButton();
        UpdateItemButton = new javax.swing.JButton();
        DeleteItemButton = new javax.swing.JButton();
        QtyOnHandLabel = new javax.swing.JLabel();
        itemCodeText = new javax.swing.JTextField();
        packSizeText = new javax.swing.JTextField();
        itemDescText = new javax.swing.JTextField();
        unitPriceText = new javax.swing.JTextField();
        qtyOnHandText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ItemTable = new javax.swing.JTable();
        tablePanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        HeaderLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        HeaderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HeaderLabel.setText("Manage Item ");

        ItemCodeLabel.setText("Item Code");

        PackSizeLabel.setText("Pack Size");

        ItemDescLabel.setText("Item Description ");

        UnitPriceLabel.setText("Unit Price");

        SaveItemButton.setText("Save Item");
        SaveItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveItemButtonActionPerformed(evt);
            }
        });

        UpdateItemButton.setText("Update Item");
        UpdateItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateItemButtonActionPerformed(evt);
            }
        });

        DeleteItemButton.setText("DELETE Item");
        DeleteItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteItemButtonActionPerformed(evt);
            }
        });

        QtyOnHandLabel.setText("Quantity on hand");

        itemCodeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCodeTextActionPerformed(evt);
            }
        });

        packSizeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                packSizeTextActionPerformed(evt);
            }
        });

        itemDescText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemDescTextActionPerformed(evt);
            }
        });

        unitPriceText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitPriceTextActionPerformed(evt);
            }
        });

        qtyOnHandText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyOnHandTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CustDetailsPanelLayout = new javax.swing.GroupLayout(CustDetailsPanel);
        CustDetailsPanel.setLayout(CustDetailsPanelLayout);
        CustDetailsPanelLayout.setHorizontalGroup(
            CustDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CustDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CustDetailsPanelLayout.createSequentialGroup()
                        .addGroup(CustDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CustDetailsPanelLayout.createSequentialGroup()
                                .addComponent(PackSizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(packSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addGroup(CustDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(QtyOnHandLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                    .addComponent(UnitPriceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(CustDetailsPanelLayout.createSequentialGroup()
                                .addComponent(ItemCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(itemCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CustDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CustDetailsPanelLayout.createSequentialGroup()
                                .addComponent(qtyOnHandText, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(unitPriceText)))
                    .addGroup(CustDetailsPanelLayout.createSequentialGroup()
                        .addComponent(ItemDescLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(itemDescText)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CustDetailsPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(DeleteItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UpdateItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SaveItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        CustDetailsPanelLayout.setVerticalGroup(
            CustDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustDetailsPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(CustDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UnitPriceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unitPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ItemCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CustDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(packSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QtyOnHandLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qtyOnHandText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PackSizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CustDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemDescText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ItemDescLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(CustDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteItemButton)
                    .addComponent(UpdateItemButton)
                    .addComponent(SaveItemButton))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        ItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ItemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ItemTable);

        javax.swing.GroupLayout ManageCustomerPanelLayout = new javax.swing.GroupLayout(ManageCustomerPanel);
        ManageCustomerPanel.setLayout(ManageCustomerPanelLayout);
        ManageCustomerPanelLayout.setHorizontalGroup(
            ManageCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageCustomerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(CustDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        ManageCustomerPanelLayout.setVerticalGroup(
            ManageCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageCustomerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CustDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 951, Short.MAX_VALUE)
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout BasePanelLayout = new javax.swing.GroupLayout(BasePanel);
        BasePanel.setLayout(BasePanelLayout);
        BasePanelLayout.setHorizontalGroup(
            BasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ManageCustomerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BasePanelLayout.setVerticalGroup(
            BasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BasePanelLayout.createSequentialGroup()
                .addComponent(ManageCustomerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BasePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BasePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SaveItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveItemButtonActionPerformed
        saveItem();
    }//GEN-LAST:event_SaveItemButtonActionPerformed

    private void UpdateItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateItemButtonActionPerformed
        updateItems();
    }//GEN-LAST:event_UpdateItemButtonActionPerformed

    private void DeleteItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteItemButtonActionPerformed
        deleteItem();
    }//GEN-LAST:event_DeleteItemButtonActionPerformed

    private void itemCodeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCodeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemCodeTextActionPerformed

    private void packSizeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packSizeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_packSizeTextActionPerformed

    private void itemDescTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemDescTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemDescTextActionPerformed

    private void unitPriceTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitPriceTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitPriceTextActionPerformed

    private void qtyOnHandTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyOnHandTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyOnHandTextActionPerformed

    private void ItemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemTableMouseClicked
        searchItems();
    }//GEN-LAST:event_ItemTableMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BasePanel;
    private javax.swing.JPanel CustDetailsPanel;
    private javax.swing.JButton DeleteItemButton;
    private javax.swing.JLabel HeaderLabel;
    private javax.swing.JLabel ItemCodeLabel;
    private javax.swing.JLabel ItemDescLabel;
    private javax.swing.JTable ItemTable;
    private javax.swing.JPanel ManageCustomerPanel;
    private javax.swing.JLabel PackSizeLabel;
    private javax.swing.JLabel QtyOnHandLabel;
    private javax.swing.JButton SaveItemButton;
    private javax.swing.JLabel UnitPriceLabel;
    private javax.swing.JButton UpdateItemButton;
    private javax.swing.JTextField itemCodeText;
    private javax.swing.JTextField itemDescText;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField packSizeText;
    private javax.swing.JTextField qtyOnHandText;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JTextField unitPriceText;
    // End of variables declaration//GEN-END:variables

    private void saveItem() {
        ItemModel itemModel = new ItemModel(itemCodeText.getText(),
                itemDescText.getText(),
                packSizeText.getText(),
                Integer.parseInt(qtyOnHandText.getText()),
                Double.parseDouble(unitPriceText.getText()));

        try {
            String response = itemController.saveItem2IC(itemModel);
            JOptionPane.showMessageDialog(this, response);
            clear();
            loadAllItems();
        } catch (SQLException ex) {
            Logger.getLogger(ItemView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void clear() {
        itemCodeText.setText("");
        itemDescText.setText("");
        packSizeText.setText("");
        qtyOnHandText.setText("");
        unitPriceText.setText("");
    }

    private void loadAllItems() {
        try {
            String[] columns = {"Item Code", "Item Desc", "Pack Size", "Quantity", "Unit Price"};

            DefaultTableModel dtm = new DefaultTableModel(columns, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            };
            ItemTable.setModel(dtm);

            ArrayList<ItemModel> itemModels = itemController.getAllItems2IC();

            for (ItemModel im : itemModels) {
                Object[] rowData = {im.getItemCode(),
                    im.getItemDescription(),
                    im.getItemPackSize(),
                    im.getItemQtyOnHand(),
                    im.getItemUnitPrice()

                };

                dtm.addRow(rowData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ItemView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void searchItems() {
        try {
            String ItemID = ItemTable.getValueAt(ItemTable.getSelectedRow(), 0).toString();

            ItemModel itemModel = itemController.searchItems2IC(ItemID);

            if (itemModel != null) {
                itemCodeText.setText(itemModel.getItemCode());
                itemDescText.setText(itemModel.getItemDescription());
                packSizeText.setText(itemModel.getItemPackSize());
                qtyOnHandText.setText(Integer.toString(itemModel.getItemQtyOnHand()));
                unitPriceText.setText(Double.toString(itemModel.getItemUnitPrice()));

            } else {
                JOptionPane.showMessageDialog(this, "No such Item");
            }

        } catch (SQLException ex) {
            Logger.getLogger(ItemView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void updateItems() {
        ItemModel itemModel = new ItemModel(itemCodeText.getText(),
                itemDescText.getText(),
                packSizeText.getText(),
                Integer.parseInt(qtyOnHandText.getText()),
                Double.parseDouble(unitPriceText.getText()));

        try {
            String response = itemController.updateItems2IC(itemModel);
            JOptionPane.showMessageDialog(this, response);
            clear();
            loadAllItems();
        } catch (SQLException ex) {
            Logger.getLogger(ItemView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());

        }

    }

    private void deleteItem() {
        String ItemCode = itemCodeText.getText();

        try {
            String response = itemController.deleteItem(ItemCode);
            JOptionPane.showMessageDialog(this, response);
            clear();
            loadAllItems();

        } catch (SQLException ex) {
            Logger.getLogger(ItemView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());

        }

    }
}
